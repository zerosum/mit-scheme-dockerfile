name: build and push

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/arm64
            bin-arch: aarch64le
            image-postfix: arm64
          - platform: linux/amd64
            bin-arch: x86-64
            image-postfix: amd64
    steps:
      -
        name: variables
        id: vars
        run: |
          echo "::set-output name=prefix::${{ secrets.DOCKERHUB_USERNAME }}/mit-scheme:${GITHUB_REF##*/v}"
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push ${{ matrix.image-postfix }} image
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ matrix.platform }}
          build-args: ARCH=${{ matrix.bin-arch }}
          push: true
          tags: ${{ steps.vars.outputs.prefix }}-${{ matrix.image-postfix }}

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: variables
        id: vars
        run: |
          echo "::set-output name=prefix::${{ secrets.DOCKERHUB_USERNAME }}/mit-scheme:${GITHUB_REF##*/v}"
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Create and push the manifest for multi-arch
        run: |
          base_name=${{ steps.vars.outputs.prefix }}
          docker manifest create $base_name ${base_name}-amd64 ${base_name}-arm64
          docker manifest push $base_name
